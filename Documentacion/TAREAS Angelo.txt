TAREAS Angelo:

*Desarrollar algoritmo Quick sort.
*C�digo fuente.
*Pruebas jUnit.
*Documentacion en javadoc.
*Diagrama de clase UML.
*El algoritmo tiene que funcionar como una API que permita invocar los algoritmos para realizar las operaciones de ordenamiento
Y obtener la instancia del algoritmo desarrollado es decir el estado del algoritmo (el paso a paso).

(El estado del algoritmo muestralo con System.out.println luego yo agarrare esos imprimir y los acomodare en una interfaz grafica).

DOCUMENTACI�N:

*Desarrollo de software.
*Algoritmos desarrollados y m�todos utilizados.
*Documenta aspectos t�cnicos del desarrollo, como an�lisis, dise�o e implementaci�n.

Probar con primitivos int:
Orden de magnitud 1: 10, 20, 30, 40, 50, 60, 70, 80, 90.
Orden de magnitud 2: 100, 200, 300, 400, 500, 600, 700, 800, 900.
Orden de magnitud 3: 1.000, 2.000, 3.000, 4.000, 5.000, 6.000, 7.000, 8.000, 9.000.
Orden de magnitud 4: 10.000, 20.000, 30.000, 40.000, 50.000, 60.000, 70.000, 80.000, 90.000.
Orden de magnitud 5: 100.000, 200.000, 300.000, 400.000, 500.000, 600.000, 700.000, 800.000, 900.000.
Orden de magnitud 6: 1.000.000, 2.000.000, 3.000.000, 4.000.000, 5.000.000, 6.000.000, 7.000.000, 8.000.000, 9.000.000.

NOTA 1: Todo se trabaja en github. deberas crear issues con todas las tareas antes mencionadas asignartelas y resolverlas. En tu respectiva rama.
Una ves tengas listo el codigo avisarme para realizar la mezcla al master. 
Si por X motivos tienes problemas con el manejo de github avisarme para colaborar.

NOTA 2: Se debe trabajar en la arquitectura especificada en github.

NOTA 3: Debe llegar sin errores.

PLAZO DE ENTREGA: implementacion Martes 23:59 - Documentacion Miercoles 23:59.